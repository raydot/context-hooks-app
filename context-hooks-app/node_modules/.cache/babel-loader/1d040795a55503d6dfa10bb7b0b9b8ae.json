{"ast":null,"code":"var _jsxFileName = \"/Users/davidkanter/Documents/Dave/context-hooks-app/src/contexts/ThemeContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLightTheme: true,\n      light: {\n        syntax: '#555',\n        ui: '#ddd',\n        bg: '#eee'\n      },\n      dark: {\n        syntax: '#ddd',\n        ui: '#333',\n        bg: '#555'\n      }\n    };\n\n    this.toggleTheme = () => {\n      this.setState({\n        isLightTheme: !this.isLightTheme\n      });\n    };\n  }\n\n  render() {\n    // this.props.children refers to the children the themeContextProvider wraps.\n    // this.toggleTheme does not need to be the same as ^^^ but is for convenience\n    return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n      value: { ...this.state,\n        toggleTheme: this.toggleTheme\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default ThemeContextProvider;","map":{"version":3,"sources":["/Users/davidkanter/Documents/Dave/context-hooks-app/src/contexts/ThemeContext.js"],"names":["React","createContext","Component","ThemeContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","setState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,YAAY,GAAGF,aAAa,EAAlC;;AAEP,MAAMG,oBAAN,SAAmCF,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAE3CG,KAF2C,GAEnC;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,EAAE,EAAE,MAAtB;AAA8BC,QAAAA,EAAE,EAAE;AAAlC,OAFD;AAGNC,MAAAA,IAAI,EAAE;AAAEH,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,EAAE,EAAE,MAAtB;AAA8BC,QAAAA,EAAE,EAAE;AAAlC;AAHA,KAFmC;;AAAA,SAO3CE,WAP2C,GAO7B,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE,CAAC,KAAKA;AAAtB,OAAd;AACD,KAT0C;AAAA;;AAU3CQ,EAAAA,MAAM,GAAG;AACP;AACA;AACA,wBACE,oBAAC,YAAD,CAAc,QAAd;AACE,MAAA,KAAK,EAAE,EAAE,GAAG,KAAKT,KAAV;AAAiBO,QAAAA,WAAW,EAAE,KAAKA;AAAnC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKG,KAAL,CAAWC,QAHd,CADF;AAOD;;AApB0C;;AAuB7C,eAAeZ,oBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\n\nexport const ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n  // this is the shared data\n  state = {\n    isLightTheme: true,\n    light: { syntax: '#555', ui: '#ddd', bg: '#eee' },\n    dark: { syntax: '#ddd', ui: '#333', bg: '#555' },\n  };\n  toggleTheme = () => {\n    this.setState({ isLightTheme: !this.isLightTheme });\n  };\n  render() {\n    // this.props.children refers to the children the themeContextProvider wraps.\n    // this.toggleTheme does not need to be the same as ^^^ but is for convenience\n    return (\n      <ThemeContext.Provider\n        value={{ ...this.state, toggleTheme: this.toggleTheme }}\n      >\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default ThemeContextProvider;\n"]},"metadata":{},"sourceType":"module"}